name: "godot-ci export"
on:
  workflow_dispatch:
    inputs:
      windows:
        description: 'Create a Windows release'
        required: true
        default: true
        type: boolean
      linux:
        description: 'Create a Linux release'
        required: true
        default: false
        type: boolean
      web:
        description: 'Create a Web release'
        required: true
        default: true
        type: boolean

env:
  GODOT_VERSION: 4.4.1
  EXPORT_NAME: ${{vars.EXPORT_NAME}}
  PROJECT_PATH: .

jobs:
  export:
    name: Export
    runs-on: ubuntu-22.04

    container:
      image: barichello/godot-ci:4.4.1

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Windows Build
        if: ${{ inputs.windows == true }}
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.zip"
      - name: Upload Windows Artifact
        if: ${{ inputs.windows == true }}
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows
      - name: Butler Windows Upload
        if: ${{ inputs.windows == true }}
        uses: yeslayla/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: windows
          ITCH_GAME: ${{vars.ITCH_GAME}}
          ITCH_USER: ${{vars.ITCH_USER}}
          PACKAGE: build/windows

      - name: Linux Build
        if: ${{ inputs.linux == true }}
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
      - name: Upload Linux Artifact
        if: ${{ inputs.linux == true }}
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux
      - name: Butler Linux Upload
        if: ${{ inputs.linux == true }}
        uses: yeslayla/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: linux
          ITCH_GAME: ${{vars.ITCH_GAME}}
          ITCH_USER: ${{vars.ITCH_USER}}
          PACKAGE: build/linux

      - name: Web Build
        if: ${{ inputs.web == true }}
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Web Artifact
        if: ${{ inputs.web == true }}
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web
      - name: Butler Web Upload
        if: ${{ inputs.web == true }}
        uses: yeslayla/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: web
          ITCH_GAME: ${{vars.ITCH_GAME}}
          ITCH_USER: ${{vars.ITCH_USER}}
          PACKAGE: build/web